{"version":3,"sources":["components/Tour.js","App.js","reportWebVitals.js","index.js"],"names":["Tour","contents","settour","tour","refreshPage","map","content","id","image","name","price","info","className","src","alt","onClick","filter","deleteTour","App","useState","setTour","Load","setLoad","error","setError","useEffect","fetch","then","res","status","json","statusText","data","catch","err","Array","isArray","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JA+BeA,EA/BF,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,KAAuB,EAAjBC,YACtC,OACE,mCACGH,EAASI,KAAI,SAACC,GACb,IAAOC,EAAgCD,EAAhCC,GAAIC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,MAAOC,EAAQL,EAARK,KAI/B,OACE,kCACE,iCACE,oBAAIC,UAAU,kBAAd,sBACA,sBAAKA,UAAU,cAAf,UACA,qBAAKC,IAAKL,EAAOM,IAAI,aACrB,sBAAKF,UAAU,YAAf,UACE,6BAAKH,IACL,mBAAGG,UAAU,aAAb,SAA2BF,OAE7B,uCAAUC,EACV,wBAAQC,UAAU,aAAaG,QAAS,kBAd3B,SAACR,GACdL,EAAQC,EAAKa,QAAO,SAACb,GAAD,OAAUA,EAAKI,KAAOA,MAaIU,CAAWV,IAAzD,uCAVUA,SCkDTW,MAtDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAAwBD,oBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA0BH,qBAA1B,mBAAOI,EAAP,KAAcC,EAAd,KAuBA,OAJAC,qBAAU,WAhBRC,MARQ,8CASPC,MAAK,SAACC,GAEL,GAAGA,EAAIC,QAAU,KAAOD,EAAIC,QAAU,IAClC,OAAOD,EAAIE,OAEbN,EAASI,EAAIG,eAGhBJ,MAAK,SAACK,GACLZ,EAAQY,GACRV,GAAQ,MACLW,OAAM,SAACC,GACXV,EAASU,QAKT,IAECX,IAAUY,MAAMC,QAAQjC,GACnB,sEAGLkB,EAKF,qBAAKT,UAAU,MAAf,SACI,cAAC,EAAD,CAAOX,SAAUE,EAAMD,QAASkB,EAASjB,KAAMA,MAL5C,oBAAIS,UAAU,UAAd,yBCxBIyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b5c35197.chunk.js","sourcesContent":["const Tour = ({contents, settour, tour, refreshPage}) => {\r\n  return (\r\n    <>\r\n      {contents.map((content) =>{\r\n        const {id, image, name, price, info} = content;\r\n        const deleteTour = (id) =>{\r\n              settour(tour.filter((tour) => tour.id !== id))\r\n        } \r\n        return(\r\n          <section key={id}>\r\n            <main>\r\n              <h5 className=\"title underline\">Our Tour</h5>\r\n              <div className=\"single-tour\">\r\n              <img src={image} alt=\"tour_img\" />\r\n              <div className=\"tour-info\">\r\n                <h4>{name}</h4>\r\n                <p className=\"tour-price\">{price}</p>\r\n              </div>\r\n              <footer> {info} \r\n              <button className=\"delete-btn\" onClick={() => deleteTour(id)}> Not interested</button> \r\n              </footer>        \r\n              </div>  \r\n            </main> \r\n          </section>\r\n        )\r\n      })\r\n      }       \r\n    </>\r\n  ) \r\n}\r\n\r\nexport default Tour\r\n","import { useEffect, useState } from 'react';\nimport Tour from './components/Tour';\n\nconst url = 'https://course-api.com/react-tours-project';\n\nfunction App() {\n  const [tour, setTour] = useState([]);\n  const [Load, setLoad] = useState(false);\n  const [error, setError] = useState();\n\n  function getApiData(){ \n    fetch(url)\n    .then((res) => {\n      //return res.json();\n      if(res.status >= 200 && res.status <= 299){\n          return res.json();\n      } else{\n        setError(res.statusText);\n      }\n    })\n    .then((data) => {\n      setTour(data);\n      setLoad(true);\n      }).catch((err) => {\n     setError(err);\n    })  \n  };  \n  useEffect(() => {\n    getApiData(); \n  }, [])\n\n  if (error || !Array.isArray(tour)) {\n    return <p>There was an error loading your data!</p>;\n  }\n\n  if(!Load){\n    return <h2 className=\"loading\">Loading...</h2>;\n  }\n\n  return (\n    <div className=\"App\">\n      {(<Tour  contents={tour} settour={setTour} tour={tour}/>)}\n   \n    </div>\n  );\n\n    // const refreshPage = () =>{\n    //   window.location.reload();\n    //   }\n\n  // if( deleteTour === true && tour.length <=0 ){\n  //   return <div className=\"section\">\n  //           <h3>No more Tours Remaining</h3>\n  //           <button className=\"btn\" onClick ={refreshPage}>Refresh</button>;\n  //         </div>\n  // } \n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}